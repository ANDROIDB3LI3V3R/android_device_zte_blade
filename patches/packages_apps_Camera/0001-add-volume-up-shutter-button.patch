From bca22e51b8798fda0b4d0eb5c4eefb52efc33290 Mon Sep 17 00:00:00 2001
From: Konsta <konsta09@gmail.com>
Date: Wed, 20 Jun 2012 14:02:21 +0300
Subject: [PATCH] add volume up shutter button

Change-Id: Id64b57683ad0ca95f43c6c39353fc1aa37b2b8bf
---
 res/values/strings.xml                            |    4 ++++
 res/xml/camera_preferences.xml                    |    6 ++++++
 res/xml/video_preferences.xml                     |    6 ++++++
 src/com/android/camera/ActivityBase.java          |   13 ++++++++++++-
 src/com/android/camera/Camera.java                |   15 +++++++++++++++
 src/com/android/camera/CameraSettings.java        |    1 +
 src/com/android/camera/VideoCamera.java           |   13 +++++++++++++
 src/com/android/camera/ui/OtherSettingsPopup.java |    1 +
 8 files changed, 58 insertions(+), 1 deletion(-)

diff --git a/res/values/strings.xml b/res/values/strings.xml
index 7b2a51b..37b2bf8 100644
--- a/res/values/strings.xml
+++ b/res/values/strings.xml
@@ -138,6 +138,10 @@
     <string name="pref_camera_power_shutter_title">Power shutter</string>
     <string name="pref_camera_power_shutter_default">off</string>
 
+    <!-- More Settings screen, volume up button title -->
+    <string name="pref_camera_volup_shutter_title">Volume shutter</string>
+    <string name="pref_camera_volup_shutter_default">on</string>
+
     <!-- More Settings screen, focus sound title -->
     <string name="pref_camera_focus_sound_title">Focus sound</string>
     <string name="pref_camera_focus_sound_default">on</string>
diff --git a/res/xml/camera_preferences.xml b/res/xml/camera_preferences.xml
index 55cbc03..3267f10 100644
--- a/res/xml/camera_preferences.xml
+++ b/res/xml/camera_preferences.xml
@@ -60,6 +60,12 @@
             camera:entries="@array/pref_switch_entries"
             camera:entryValues="@array/pref_switch_entryvalues" />
     <ListPreference
+            camera:key="pref_volup_shutter"
+            camera:defaultValue="@string/pref_camera_volup_shutter_default"
+            camera:title="@string/pref_camera_volup_shutter_title"
+            camera:entries="@array/pref_switch_entries"
+            camera:entryValues="@array/pref_switch_entryvalues" />
+    <ListPreference
             camera:key="pref_focus_sound"
             camera:defaultValue="@string/pref_camera_focus_sound_default"
             camera:title="@string/pref_camera_focus_sound_title"
diff --git a/res/xml/video_preferences.xml b/res/xml/video_preferences.xml
index 28b22da..c39eff0 100644
--- a/res/xml/video_preferences.xml
+++ b/res/xml/video_preferences.xml
@@ -77,6 +77,12 @@
             camera:entries="@array/pref_switch_entries"
             camera:entryValues="@array/pref_switch_entryvalues" />
     <ListPreference
+            camera:key="pref_volup_shutter"
+            camera:defaultValue="@string/pref_camera_volup_shutter_default"
+            camera:title="@string/pref_camera_volup_shutter_title"
+            camera:entries="@array/pref_switch_entries"
+            camera:entryValues="@array/pref_switch_entryvalues" />
+    <ListPreference
             camera:key="pref_camera_storage_key"
             camera:title="@string/pref_camera_storage_title" />
 </PreferenceGroup>
diff --git a/src/com/android/camera/ActivityBase.java b/src/com/android/camera/ActivityBase.java
index 219dbe0..c1b910a 100644
--- a/src/com/android/camera/ActivityBase.java
+++ b/src/com/android/camera/ActivityBase.java
@@ -68,12 +68,23 @@ abstract public class ActivityBase extends Activity {
         if (val.equals(CameraSettings.VALUE_ON)){
             getWindow().addFlags(WindowManager.LayoutParams.PREVENT_POWER_KEY);
             return true;
-        }else{
+        } else {
             getWindow().clearFlags(WindowManager.LayoutParams.PREVENT_POWER_KEY);
             return false;
         }
     }
 
+    protected boolean volupShutter(ComboPreferences prefs) {
+        prefs.setLocalId(getApplicationContext(), 0);
+        String val = prefs.getString(CameraSettings.KEY_VOLUP_SHUTTER,
+                getResources().getString(R.string.pref_camera_volup_shutter_default));
+        if (val.equals(CameraSettings.VALUE_ON)){
+            return true;
+        } else {
+            return false;
+        }
+    }
+
     protected boolean focusSound(ComboPreferences prefs) {
         prefs.setLocalId(getApplicationContext(), 0);
         String val = prefs.getString(CameraSettings.KEY_FOCUS_SOUND,
diff --git a/src/com/android/camera/Camera.java b/src/com/android/camera/Camera.java
index 9273258..d636934 100644
--- a/src/com/android/camera/Camera.java
+++ b/src/com/android/camera/Camera.java
@@ -1262,6 +1262,7 @@ public class Camera extends ActivityBase implements FocusManager.Listener,
         getPreferredCameraId();
         mStorage = CameraSettings.readStorage(mPreferences);
         powerShutter(mPreferences);
+        volupShutter(mPreferences);
         String[] defaultFocusModes = getResources().getStringArray(
                 R.array.pref_camera_focusmode_default_array);
         mFocusManager = new FocusManager(mPreferences, defaultFocusModes);
@@ -1402,6 +1403,7 @@ public class Camera extends ActivityBase implements FocusManager.Listener,
         final String[] OTHER_SETTING_KEYS = {
                 CameraSettings.KEY_RECORD_LOCATION,
                 CameraSettings.KEY_POWER_SHUTTER,
+                CameraSettings.KEY_VOLUP_SHUTTER,
                 CameraSettings.KEY_FOCUS_SOUND,
                 CameraSettings.KEY_STORAGE,
                 CameraSettings.KEY_PICTURE_SIZE,
@@ -1944,6 +1946,14 @@ public class Camera extends ActivityBase implements FocusManager.Listener,
                     onShutterButtonFocus(true);
                 }
                 return true;
+            case KeyEvent.KEYCODE_VOLUME_UP:
+                if (mFirstTimeInitialized && event.getRepeatCount() == 0 && volupShutter(mPreferences)) {
+                    onShutterButtonFocus(true);
+                } else if (mFirstTimeInitialized && event.getRepeatCount() == 0) {
+                    // bail out and show volume dialog
+                    break;
+                }
+                return true;
         }
 
         return super.onKeyDown(keyCode, event);
@@ -1962,6 +1972,11 @@ public class Camera extends ActivityBase implements FocusManager.Listener,
                     onShutterButtonClick();
                 }
                 return true;
+            case KeyEvent.KEYCODE_VOLUME_UP:
+                if (volupShutter(mPreferences)) {
+                    onShutterButtonClick();
+                }
+                return true;
         }
         return super.onKeyUp(keyCode, event);
     }
diff --git a/src/com/android/camera/CameraSettings.java b/src/com/android/camera/CameraSettings.java
index 70aa7ed..7b60f0d 100644
--- a/src/com/android/camera/CameraSettings.java
+++ b/src/com/android/camera/CameraSettings.java
@@ -60,6 +60,7 @@ public class CameraSettings {
     public static final String KEY_CAMERA_FIRST_USE_HINT_SHOWN = "pref_camera_first_use_hint_shown_key";
     public static final String KEY_VIDEO_FIRST_USE_HINT_SHOWN = "pref_video_first_use_hint_shown_key";
     public static final String KEY_POWER_SHUTTER = "pref_power_shutter";
+    public static final String KEY_VOLUP_SHUTTER = "pref_volup_shutter";
     public static final String KEY_STORAGE = "pref_camera_storage_key";
     public static final String KEY_ZSL = "pref_camera_zsl_key";
     public static final String KEY_ISO = "pref_camera_iso_key";
diff --git a/src/com/android/camera/VideoCamera.java b/src/com/android/camera/VideoCamera.java
index a18cf8f..513f25c 100644
--- a/src/com/android/camera/VideoCamera.java
+++ b/src/com/android/camera/VideoCamera.java
@@ -365,6 +365,7 @@ public class VideoCamera extends ActivityBase
         mCameraId = CameraSettings.readPreferredCameraId(mPreferences);
         mStorage = CameraSettings.readStorage(mPreferences);
         powerShutter(mPreferences);
+        volupShutter(mPreferences);
         //Testing purpose. Launch a specific camera through the intent extras.
         int intentCameraId = Util.getCameraFacingIntentExtras(this);
         if (intentCameraId != -1) {
@@ -528,6 +529,7 @@ public class VideoCamera extends ActivityBase
         final String[] OTHER_SETTING_KEYS = {
                     CameraSettings.KEY_RECORD_LOCATION,
                     CameraSettings.KEY_POWER_SHUTTER,
+                    CameraSettings.KEY_VOLUP_SHUTTER,
                     CameraSettings.KEY_STORAGE};
 
         CameraPicker.setImageResourceId(R.drawable.ic_switch_video_facing_holo_light);
@@ -1064,6 +1066,12 @@ public class VideoCamera extends ActivityBase
             case KeyEvent.KEYCODE_MENU:
                 if (mMediaRecorderRecording) return true;
                 break;
+            case KeyEvent.KEYCODE_VOLUME_UP:
+                if (volupShutter(mPreferences)) {
+                    // do nothing, just don't display the volume dialog
+                    return true;
+                }
+                break;
         }
 
         return super.onKeyDown(keyCode, event);
@@ -1080,6 +1088,11 @@ public class VideoCamera extends ActivityBase
                     onShutterButtonClick();
                 }
                 return true;
+            case KeyEvent.KEYCODE_VOLUME_UP:
+                if (volupShutter(mPreferences)) {
+                    onShutterButtonClick();
+                }
+                return true;
         }
         return super.onKeyUp(keyCode, event);
     }
diff --git a/src/com/android/camera/ui/OtherSettingsPopup.java b/src/com/android/camera/ui/OtherSettingsPopup.java
index a0de0a7..c19dfda 100644
--- a/src/com/android/camera/ui/OtherSettingsPopup.java
+++ b/src/com/android/camera/ui/OtherSettingsPopup.java
@@ -64,6 +64,7 @@ public class OtherSettingsPopup extends AbstractSettingPopup
             // Currently, the RecordLocationPreference is the only setting
             // which applies the on/off switch.
             if (CameraSettings.KEY_POWER_SHUTTER.equals(pref.getKey()) ||
+                    CameraSettings.KEY_VOLUP_SHUTTER.equals(pref.getKey()) ||
                     CameraSettings.KEY_RECORD_LOCATION.equals(pref.getKey()) ||
                     CameraSettings.KEY_FOCUS_SOUND.equals(pref.getKey())) {
                 return R.layout.in_line_setting_switch;
-- 
1.7.9.5

